stages:
  - conventional-commits-linting
  - formatting
  - linting
  - compiling
  - unit-testing


conventional-commits-linting:
  stage: conventional-commits-linting
  image: rust
  before_script:
    - cargo install conventional_commits_linter
  script:
    - COMMON_ANCESTOR_COMMIT=$(git merge-base "origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" "origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME")
    # Lint all the commits in the branch.
    - /usr/local/cargo/bin/conventional_commits_linter --from-commit-hash "$COMMON_ANCESTOR_COMMIT" --allow-angular-type-only
  rules:
    - if: $CI_MERGE_REQUEST_ID


formatting:
  stage: formatting
  image: archlinux:base
  before_script:
    - pacman -Sy --noconfirm
    - pacman -S clang diffutils gawk grep --noconfirm
  script:
    - for i in $( du -a src/ tests | awk '{print $2}' | grep -i ".c$" ); do
    - clang-format $i > temp.txt
    - cmp $i temp.txt
    - done
  rules:
    - if: $CI_MERGE_REQUEST_ID


linting:
  stage: linting
  image: archlinux:base
  before_script:
    - pacman -Sy --noconfirm
    - pacman -S clang cunit gawk grep --noconfirm
  script:
    - for i in $( du -a src/ tests | awk '{print $2}' | grep -i ".c$" ); do
    - clang-tidy $i --checks="*,-llvmlibc-restrict-system-libc-headers" --warnings-as-errors="*"
    - done
  rules:
    - if: $CI_MERGE_REQUEST_ID


compiling:
  stage: compiling
  image: archlinux:base-devel
  before_script:
    - pacman -Sy --noconfirm
    - pacman -S lib32-gcc-libs lib32-glibc make --noconfirm
  script:
    - make
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == "master"


unit-testing:
  stage: unit-testing
  image: archlinux:base-devel
  before_script:
    - pacman -Sy --noconfirm
    - pacman -S lib32-gcc-libs lib32-glibc make cunit --noconfirm
  script:
    - make test
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == "master"
